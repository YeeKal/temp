<launch>
    <arg name="debug" default="false" />
    <arg unless="$(arg debug)" name="launch_prefix" value="" />
    <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />
    <!-- planning context-->
    <arg name="limited" default="false"/>
    <arg name="load_robot_description" default="true"/>

    <!-- The name of the parameter under which the URDF is loaded -->
    <arg name="robot_description" default="robot_description"/>

    <!-- Load universal robot description format (URDF) -->
    <group if="$(arg load_robot_description)">
        <param unless="$(arg limited)" name="$(arg robot_description)" command="$(find xacro)/xacro.py '$(find ur_description)/urdf/ur5_robot.urdf.xacro'" />
        <param if="$(arg limited)" name="$(arg robot_description)" command="$(find xacro)/xacro.py '$(find ur_description)/urdf/ur5_joint_limited_robot.urdf.xacro'" />
    </group>

    <!-- The semantic description that corresponds to the URDF -->
    <param name="$(arg robot_description)_semantic" textfile="$(find ur5_moveit_config)/config/ur5.srdf" />
    
    <!-- Load updated joint limits (override information from URDF) -->
    <group ns="$(arg robot_description)_planning">
        <rosparam command="load" file="$(find ur5_moveit_config)/config/joint_limits.yaml"/>
    </group>

    <!-- Load default settings for kinematics; these settings are overridden by settings in a node's namespace -->
    <group ns="$(arg robot_description)_kinematics">
        <rosparam command="load" file="$(find ur5_moveit_config)/config/kinematics.yaml"/>
    </group>
<!--end planning context-->

    <node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_0" args="0 0 0 0 0 0 odom_combined base_footprint 100" />

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="true"/>
    <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

    <include file="$(find ur5_moveit_config)/launch/moveit_rviz.launch">
        <arg name="config" value="true"/>
    </include>

    <node name="planning_pipeline_in_cabin_2" pkg="ur5_planning" type="planning_pipeline_in_cabin_2" respawn="false" launch-prefix="$(arg launch_prefix)" output="screen">
        <rosparam command="load" file="$(find ur5_moveit_config)/config/kinematics.yaml"/>
        <param name="/planning_plugin" value="ompl_interface/OMPLPlanner"/>
        <rosparam command="load" file="$(find ur5_moveit_config)/config/ompl_planning.yaml"/>
    </node>
</launch>
